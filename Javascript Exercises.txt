1. What is the difference between the following 2 statements?
setTimeout(booyah, 2000); -> call booyah function  after 2000 milliseconds.
setTimeout(booyah(), 2000); -> it calls the function immediately, rather than waiting the 2000ms!

2. What do the following 2 alerts display (answer without running the code)?
var myfunc = function(a, x) {
 return a * x;
};
var x = myfunc(2, 3);
var y = myfunc;
alert(x);
alert(y(2,3)); 
-> diplay 6 twice


3. Write functions booyah1 and booyah2 so that in both cases below, an alert box comes up after 2 seconds that
says “BOOYAH!”

function onClick(){
	setTimeout(booyah1, 2000);	
}
function booyah1(){
	alert("BOOYAH!");
}
///////////////////////

function onClick(){
	setTimeout(booyah2(), 2000);
}
function booyah2(){
	setTimeout(booyah3, 2000);
}
function booyah3(){
	alert("BOOYAH!");
}


4. What is "Unobtrusive Javascript"? What is the practical application of Unobtrusive Javascript (and the reasons
for using it)?
-> 
To separate JavaScript from HTML markup, as well as keeping modules of JavaScript independent of other modules. All content should be available without all or any of the JavaScript running successfully.
Unobtrusive JavaScript should not degrade the accessibility of the HTML, and ideally should improve it, whether the user has personal disabilities or are using an unusual, or unusually configured, browser.